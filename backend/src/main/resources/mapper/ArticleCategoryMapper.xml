<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.lingview.dimstack.mapper.ArticleCategoryMapper">

    <select id="findAllEnabledCategories" resultType="xyz.lingview.dimstack.domain.ArticleCategory">
        SELECT
            id,
            article_categories AS article_categories,
            categories_explain AS categories_explain,
            founder,
            create_time AS create_time,
            status
        FROM article_categories
        WHERE status = 1
    </select>

    <select id="findAllEnabledCategoriesAndCount" resultType="xyz.lingview.dimstack.domain.ArticleCategoryAndCount">
        SELECT
            ac.id,
            ac.article_categories AS article_categories,
            ac.categories_explain AS categories_explain,
            ac.founder,
            ac.create_time AS create_time,
            ac.status,
            COUNT(a.id) AS articleCount
        FROM article_categories ac
        LEFT JOIN article a ON ac.article_categories = a.category
            AND a.status = 1
        WHERE ac.status = 1
        GROUP BY ac.id, ac.article_categories, ac.categories_explain, ac.founder, ac.create_time, ac.status
        ORDER BY ac.create_time DESC
    </select>

    <select id="findArticlesByCategory" resultType="xyz.lingview.dimstack.dto.request.ArticleDTO">
        SELECT
            a.id,
            a.article_id,
            a.article_name AS title,
            a.excerpt,
            a.article_cover AS image,
            a.create_time AS date,
            u.username AS author,
            a.category,
            a.alias,
            GROUP_CONCAT(atr.article_tag) as tag
        FROM article a
                 LEFT JOIN user_information u ON a.uuid = u.uuid
                 LEFT JOIN article_tag_relation atr ON a.article_id = atr.article_id
        WHERE a.category = #{category}
          AND a.status = 1
        GROUP BY a.id, a.article_id, a.article_name, a.excerpt,
                 a.article_cover, a.create_time, u.username, a.category, a.alias
        ORDER BY a.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countArticlesByCategory" resultType="int">
        SELECT COUNT(*)
        FROM article
        WHERE category = #{category}
          AND status = 1
    </select>

    <select id="findAll" resultType="xyz.lingview.dimstack.domain.ArticleCategory">
        SELECT
            id,
            article_categories AS article_categories,
            categories_explain AS categories_explain,
            founder,
            create_time AS create_time,
            status
        FROM article_categories
        ORDER BY create_time DESC
    </select>

    <select id="findByStatus" resultType="xyz.lingview.dimstack.domain.ArticleCategory">
        SELECT
            id,
            article_categories AS article_categories,
            categories_explain AS categories_explain,
            founder,
            create_time AS create_time,
            status
        FROM article_categories
        WHERE status = #{status}
        ORDER BY create_time DESC
    </select>

    <select id="findById" resultType="xyz.lingview.dimstack.domain.ArticleCategory">
        SELECT
            id,
            article_categories AS article_categories,
            categories_explain AS categories_explain,
            founder,
            create_time AS create_time,
            status
        FROM article_categories
        WHERE id = #{id}
    </select>

    <select id="findByName" resultType="xyz.lingview.dimstack.domain.ArticleCategory">
        SELECT
            id,
            article_categories AS article_categories,
            categories_explain AS categories_explain,
            founder,
            create_time AS create_time,
            status
        FROM article_categories
        WHERE article_categories = #{categoryName}
    </select>

    <insert id="insert" parameterType="xyz.lingview.dimstack.domain.ArticleCategory">
        INSERT INTO article_categories (article_categories, categories_explain, founder, status)
        VALUES (#{article_categories}, #{categories_explain}, #{founder}, #{status})
    </insert>

    <update id="update" parameterType="xyz.lingview.dimstack.domain.ArticleCategory">
        UPDATE article_categories
        <set>
            <if test="article_categories != null and article_categories != ''">article_categories = #{article_categories},</if>
            <if test="categories_explain != null and categories_explain != ''">categories_explain = #{categories_explain},</if>
            <if test="founder != null and founder != ''">founder = #{founder},</if>
            <if test="status != null">status = #{status},</if>
            create_time = CURRENT_TIMESTAMP
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE article_categories
        SET status = #{status}
        WHERE id = #{id}
    </update>
</mapper>
