name: Build and Release
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Clean backend static directory
        run: |
          cd backend
          rm -rf src/main/resources/static/*

      - name: Copy frontend build to backend static
        run: |
          cp -r frontend/dist/* backend/src/main/resources/static/

      - name: Build backend with Maven
        run: |
          cd backend
          mvn clean package -DskipTests

      - name: Create release package
        run: |
          cd backend
          mkdir release
          cp target/*.jar release/
          cp dim_stack.sql release/
          cd release
          zip -r dim_stack-release.zip *

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dimstack-release
          path: backend/release/dim_stack-release.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: backend/release/dim_stack-release.zip
          asset_name: dim_stack-release.zip
          asset_content_type: application/zip
